{"version":3,"sources":["webpack:///./src/models/Estados.js","webpack:///./src/controllers/EstadosController.js","webpack:///./src/views/BairrosAdd.vue?49dc","webpack:///src/views/BairrosAdd.vue","webpack:///./src/views/BairrosAdd.vue?9c59","webpack:///./src/views/BairrosAdd.vue","webpack:///./src/models/Bairros.js","webpack:///./src/controllers/BairrosController.js","webpack:///./src/models/Cidades.js","webpack:///./src/controllers/CidadesController.js"],"names":["Estados","nome","uf","Object","classCallCheck","this","__webpack_require__","d","__webpack_exports__","EstadosController_EstadosController","EstadosController","_BaseController","possibleConstructorReturn","getPrototypeOf","apply","arguments","inherits","createClass","key","value","_create","asyncToGenerator","regeneratorRuntime","mark","_callee","params","estado","result","wrap","_context","prev","next","_request","post","sent","abrupt","response","data","t0","stop","create","_x","_list","_callee2","filter","page","limit","sortBy","descending","queryParams","_context2","buildQueryParams","get","concat","list","_x2","_x3","_x4","_x5","_x6","_all","_callee3","_context3","all","_getCidades","_callee4","estados_id","_context4","getCidades","_x7","BaseController","render","_vm","_h","$createElement","_c","_self","attrs","fluid","fill-height","justify-center","align-center","color","width","ref","on","submit","$event","preventDefault","model","callback","$$v","valid","expression","xs12","md4","rules","formRules","default","required","label","validate-on-blur","formFields","$set","xs6","md3","items","estadosOptions","item-text","item-value","autofocus","cidadesOptions","loading","cidadesOptionsLoading","no-data-text","flat","large","click","save","_v","staticRenderFns","BairrosAddvue_type_script_lang_js_","cidades_id","methods","objectSpread","vuex_esm","_save","bairrosController","BairrosController","SHOW_ALERT","type","error","message","$router","push","path","$refs","form","validate","loadEstados","_loadEstados","estadoController","loadCidades","_loadCidades","cidadesController","CidadesController","listAllByEstado","watch","formFields.estados_id","created","SET_TOOLBAR_BACK_URL","views_BairrosAddvue_type_script_lang_js_","component","componentNormalizer","installComponents_default","VBtn","VCard","VCardActions","components_VCard","VCardText","VContainer","VDivider","VFlex","VForm","VLayout","VSelect","VSpacer","VGrid","VTextField","Bairros","id","BairrosController_BairrosController","bairro","_update","put","update","_delete2","delete","_delete","_x8","_get","_callee5","_context5","_x9","Cidades","CidadesController_CidadesController","cidade","_listAllByEstado","_callee6","_context6","_x10","_getBairros","_callee7","_context7","getBairros","_x11"],"mappings":"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","file":"js/chunk-5d92c55c.9cd8e90d.js","sourcesContent":["'use strict'\n\nexport class Estados {\n  constructor(nome, uf) {\n    this.nome = nome\n    this.uf = uf\n  }\n}","'use strict'\nimport { Estados } from '../models/Estados';\nimport { BaseController } from './BaseController';\n\nexport class EstadosController extends BaseController {\n  async create(params) {\n    try {\n      let estado = new Estados(params.nome, params.uf)\n      let result = await this._request.post('estados', estado)\n      return this.response('Estado adicionado com sucesso.', result.data)\n    } catch (error) {\n      return this.response(false, false, error)\n    }\n  }\n\n  async list(filter, page, limit, sortBy, descending) {\n    try {\n      let queryParams = this.buildQueryParams(filter, page, limit, sortBy, descending)\n      let result = await this._request.get(`estados${queryParams}`)\n      return this.response(false, result.data)\n    } catch (error) {\n      return this.response(false, false, error)\n    }\n  }\n\n  async all () {\n    try {\n      let queryParams = this.buildQueryParams(false, false, -1)\n      let result = await this._request.get(`estados${queryParams}`)\n      return this.response(false, result.data)\n    } catch (error) {\n      return this.response(false, false, error)\n    }\n  }\n\n  async getCidades(estados_id)\n  {\n    try {\n      let result = await this._request.get(`estados/${estados_id}/cidades`)\n      return this.response(false, result.data)\n    } catch (error) {\n      return this.response(false, false, error)\n    }\n  }\n\n}","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('v-container',{attrs:{\"fluid\":\"\",\"fill-height\":\"\"}},[_c('v-layout',{attrs:{\"justify-center\":\"\",\"align-center\":\"\"}},[_c('v-flex',[_c('v-card',{attrs:{\"color\":\"white\",\"width\":\"100%\"}},[_c('v-card-text',[_c('v-form',{ref:\"form\",on:{\"submit\":function($event){$event.preventDefault();}},model:{value:(_vm.valid),callback:function ($$v) {_vm.valid=$$v},expression:\"valid\"}},[_c('v-container',[_c('v-layout',[_c('v-flex',{attrs:{\"xs12\":\"\",\"md4\":\"\"}},[_c('v-text-field',{attrs:{\"rules\":[_vm.formRules.default.required],\"label\":\"Nome\",\"required\":\"\",\"validate-on-blur\":\"\"},model:{value:(_vm.formFields.nome),callback:function ($$v) {_vm.$set(_vm.formFields, \"nome\", $$v)},expression:\"formFields.nome\"}})],1),_c('v-flex',{attrs:{\"xs6\":\"\",\"md3\":\"\"}},[_c('v-select',{attrs:{\"items\":_vm.estadosOptions,\"rules\":[_vm.formRules.default.required],\"label\":\"Estado\",\"item-text\":\"nome\",\"item-value\":\"id\",\"autofocus\":true,\"required\":\"\"},model:{value:(_vm.formFields.estados_id),callback:function ($$v) {_vm.$set(_vm.formFields, \"estados_id\", $$v)},expression:\"formFields.estados_id\"}})],1),_c('v-flex',{attrs:{\"xs6\":\"\",\"md4\":\"\"}},[_c('v-select',{attrs:{\"items\":_vm.cidadesOptions,\"rules\":[_vm.formRules.default.required],\"label\":\"Cidade\",\"item-text\":\"nome\",\"item-value\":\"id\",\"loading\":_vm.cidadesOptionsLoading,\"autofocus\":true,\"no-data-text\":\"Selecione um estado\",\"required\":\"\"},model:{value:(_vm.formFields.cidades_id),callback:function ($$v) {_vm.$set(_vm.formFields, \"cidades_id\", $$v)},expression:\"formFields.cidades_id\"}})],1)],1)],1)],1)],1),_c('v-divider'),_c('v-card-actions',[_c('v-spacer'),_c('v-btn',{attrs:{\"color\":\"primary\",\"flat\":\"\",\"large\":\"\",\"loading\":_vm.loading},on:{\"click\":_vm.save}},[_vm._v(\"\\n            Salvar\\n          \")])],1)],1)],1)],1)],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n  <v-container\n    fluid\n    fill-height\n  >\n    <v-layout\n      justify-center\n      align-center\n    >\n      <v-flex>\n        <v-card\n          color=\"white\"\n          width=\"100%\"\n        >\n          <v-card-text>\n            <v-form v-model=\"valid\" @submit.prevent=\"\" ref=\"form\">\n              <v-container>\n                <v-layout>\n                  <v-flex\n                    xs12\n                    md4\n                  >\n                    <v-text-field\n                      v-model=\"formFields.nome\"\n                      :rules=\"[formRules.default.required]\"\n                      label=\"Nome\"\n                      required\n                      validate-on-blur\n                    ></v-text-field>\n                  </v-flex>\n                  <v-flex\n                    xs6\n                    md3\n                  >\n                    <v-select\n                      v-model=\"formFields.estados_id\"\n                      :items=\"estadosOptions\"\n                      :rules=\"[formRules.default.required]\"\n                      label=\"Estado\"\n                      item-text=\"nome\"\n                      item-value=\"id\"\n                      :autofocus=\"true\"\n                      required                     \n                    />\n                  </v-flex>\n                  <v-flex\n                    xs6\n                    md4\n                  >\n                    <v-select\n                      v-model=\"formFields.cidades_id\"\n                      :items=\"cidadesOptions\"\n                      :rules=\"[formRules.default.required]\"\n                      label=\"Cidade\"\n                      item-text=\"nome\"\n                      item-value=\"id\"\n                      :loading=\"cidadesOptionsLoading\"\n                      :autofocus=\"true\"\n                      no-data-text=\"Selecione um estado\"\n                      required                      \n                    />\n                  </v-flex>\n                </v-layout>\n              </v-container>\n            </v-form>\n          </v-card-text>\n          <v-divider />\n          <v-card-actions>\n            <v-spacer></v-spacer>\n            <v-btn\n              color=\"primary\"\n              flat\n              large\n              :loading=\"loading\"\n              @click=\"save\"\n            >\n              Salvar\n            </v-btn>\n          </v-card-actions>\n        </v-card>\n      </v-flex>\n    </v-layout>\n  </v-container>\n</template>\n\n<script>\nimport { BairrosController } from \"../controllers/BairrosController\";\nimport { CidadesController } from \"../controllers/CidadesController\";\nimport { EstadosController } from \"../controllers/EstadosController\";\n\nimport { mapMutations } from \"vuex\";\n\nexport default {\n  data() {\n    return {\n      loading: false,\n      valid: false,\n      formFields: {\n        nome: \"\",\n        estados_id: \"\",\n        cidades_id: \"\"\n      },\n      formRules: {\n        default: {\n          required: value => !!value || \"Campo obrigatório\"\n        }\n      },\n      estadosOptions: [],\n      cidadesOptions: [],\n      cidadesOptionsLoading:false\n    };\n  },\n\n  methods: {\n    ...mapMutations([\"SHOW_ALERT\", \"SET_TOOLBAR_BACK_URL\"]),\n\n    async save() {\n      if (this.valid) {\n        this.loading = true\n\n        let bairrosController = new BairrosController();\n        let result = await bairrosController.create(this.formFields);\n\n        this.SHOW_ALERT({\n          type: result.error ? \"error\" : \"success\",\n          message: result.message\n        });\n\n        this.loading = false\n\n        if (!result.error)\n          this.$router.push({ path: \"/bairros\" });\n      } else {\n        this.$refs.form.validate()\n      }\n    },\n\n    async loadEstados() {\n      let estadoController = new EstadosController()\n      let result = await estadoController.all()\n\n      this.estadosOptions = result.data.data\n    },\n\n    async loadCidades(estados_id) {\n      this.cidadesOptionsLoading = true\n      let cidadesController = new CidadesController()\n      let result = await cidadesController.listAllByEstado(estados_id)\n      this.cidadesOptions = result.data.data\n      this.cidadesOptionsLoading = false\n    }\n  },\n\n  watch: {\n    'formFields.estados_id': function () {\n      this.loadCidades(this.formFields.estados_id)\n    }\n  },\n\n  created() {\n    this.SET_TOOLBAR_BACK_URL('/bairros')\n    \n    this.loadEstados()\n  }\n};\n</script>","import mod from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/vuetify-loader/lib/loader.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./BairrosAdd.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/vuetify-loader/lib/loader.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./BairrosAdd.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./BairrosAdd.vue?vue&type=template&id=1bc924cc&\"\nimport script from \"./BairrosAdd.vue?vue&type=script&lang=js&\"\nexport * from \"./BairrosAdd.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports\n\n/* vuetify-loader */\nimport installComponents from \"!/home/arco/projetos/sistema-os-app/node_modules/vuetify-loader/lib/runtime/installComponents.js\"\nimport { VBtn } from 'vuetify/lib'\nimport { VCard } from 'vuetify/lib'\nimport { VCardActions } from 'vuetify/lib'\nimport { VCardText } from 'vuetify/lib'\nimport { VContainer } from 'vuetify/lib'\nimport { VDivider } from 'vuetify/lib'\nimport { VFlex } from 'vuetify/lib'\nimport { VForm } from 'vuetify/lib'\nimport { VLayout } from 'vuetify/lib'\nimport { VSelect } from 'vuetify/lib'\nimport { VSpacer } from 'vuetify/lib'\nimport { VTextField } from 'vuetify/lib'\ninstallComponents(component, {VBtn,VCard,VCardActions,VCardText,VContainer,VDivider,VFlex,VForm,VLayout,VSelect,VSpacer,VTextField})\n","'use strict'\n\nexport class Bairros {\n  constructor(nome, cidades_id, id) {\n    this.id = id\n    this.nome = nome\n    this.cidades_id = cidades_id\n  }\n}","'use strict'\nimport { Bairros } from '../models/Bairros';\nimport { BaseController } from './BaseController';\n\nexport class BairrosController extends BaseController {\n  async create(params) {\n    try {\n      let bairro = new Bairros(params.nome, params.cidades_id)\n      let result = await this._request.post('bairros', bairro)\n      return this.response('Bairro adicionado com sucesso.', result.data)\n    } catch (error) {\n      return this.response(false, false, error)\n    }\n  }\n\n  async update(params) {\n    try {\n      let bairro = new Bairros(params.nome, params.cidades_id, params.id)\n      let result = await this._request.put(`bairros/${bairro.id}`, bairro)\n      return this.response('Bairro editado com sucesso.', result.data)\n    } catch (error) {\n      return this.response(false, false, error)\n    }\n  }\n\n  async list(filter, page, limit, sortBy, descending) {\n    try {\n      let queryParams = this.buildQueryParams(filter, page, limit, sortBy, descending)\n      let result = await this._request.get(`bairros${queryParams}`)\n      return this.response(false, result.data)\n    } catch (error) {\n      return this.response(false, false, error)\n    }\n  }\n\n  async delete(id) {\n    try {\n      let result = await this._request.delete(`bairros/${id}`)\n      return this.response('Bairro apagado com sucesso.', result.data)\n    } catch (error) {\n      return this.response(false, false, error)\n    }\n  }\n\n  async get(id) {\n    try {\n      let result = await this._request.get(`bairros/${id}`)\n      return this.response('Bairro carregado com sucesso.', result.data)\n    } catch (error) {\n      return this.response(false, false, error)\n    }\n  }\n}","'use strict'\n\nexport class Cidades {\n  constructor(nome, estados_id, id) {\n    this.id = id\n    this.nome = nome\n    this.estados_id = estados_id\n  }\n}","'use strict'\nimport { Cidades } from '../models/Cidades';\nimport { BaseController } from './BaseController';\n\nexport class CidadesController extends BaseController {\n  async create(params) {\n    try {\n      let cidade = new Cidades(params.nome, params.estados_id)\n      let result = await this._request.post('cidades', cidade)\n      return this.response('Cidade adicionada com sucesso.', result.data)\n    } catch (error) {\n      return this.response(false, false, error)\n    }\n  }\n\n  async update(params) {\n    try {\n      let cidade = new Cidades(params.nome, params.estados_id, params.id)\n      let result = await this._request.put(`cidades/${cidade.id}`, cidade)\n      return this.response('Cidade editada com sucesso.', result.data)\n    } catch (error) {\n      return this.response(false, false, error)\n    }\n  }\n\n  async list(filter, page, limit, sortBy, descending) {\n    try {\n      let queryParams = this.buildQueryParams(filter, page, limit, sortBy, descending)\n      let result = await this._request.get(`cidades${queryParams}`)\n      return this.response(false, result.data)\n    } catch (error) {\n      return this.response(false, false, error)\n    }\n  }\n\n  async delete(id) {\n    try {\n      let result = await this._request.delete(`cidades/${id}`)\n      return this.response('Cidade apagada com sucesso.', result.data)\n    } catch (error) {\n      return this.response(false, false, error)\n    }\n  }\n\n  async get(id) {\n    try {\n      let result = await this._request.get(`cidades/${id}`)\n      return this.response('Cidade carregada com sucesso.', result.data)\n    } catch (error) {\n      return this.response(false, false, error)\n    }\n  }\n\n  async listAllByEstado(estados_id) {\n    try {\n      let queryParams = this.buildQueryParams({estados_id:estados_id}, false, -1)\n      let result = await this._request.get(`cidades${queryParams}`)\n      return this.response(false, result.data)\n    } catch (error) {\n      return this.response(false, false, error)\n    }\n  }\n\n  async getBairros(cidades_id)\n  {\n    try {\n      let result = await this._request.get(`cidades/${cidades_id}/bairros`)\n      return this.response(false, result.data)\n    } catch (error) {\n      return this.response(false, false, error)\n    }\n  }\n\n}"],"sourceRoot":""}